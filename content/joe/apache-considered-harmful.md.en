Status: verified=17534
Title: Apache HTTPd Devs Considered Harmful
Dependencies: *.md.en
Categories: Apache, Perl
Keywords: apache,httpd,mod_apreq2,libapreq2,mod_perl

<div class="right">

![tarred and feathered](https://www.apache.org/images/feather.png)

</div>

For the past 25 years, I have been the lead developer of the libapreq2 subproject within the [Apache HTTPd Server](https://httpd.apache.org) Parent Project. The original idea of `libapreq`, as a safe/performant [HTML form submission](https://www.w3.org/TR/2014/REC-html5-20141028/forms.html) and [Cookie](https://datatracker.ietf.org/doc/html/rfc6265) parsing library, came out of a collaboration between Lincoln Stein and Doug MacEachern in the late 90s.

It was my vision back then to transform the library into a generic, non-Perl related `C` library that would support language bindings from other programming languages, which is why I pushed for the project to be [homed](https://httpd.apache.org/apreq) under the HTTPd umbrella instead of the [Apache-Perl](https://perl.apache.org/) project.

While this vision was wildly successful, with language bindings available for several languages like [`Perl`](https://perl.apache.org/), [`TCL`](https://tcl.apache.org/), [`R`](https://github.com/jeffreyhorner/rapache), etc., ever since about 2010 it has proven tragic for the [existing user community](https://webtechsurvey.com/technology/mod_apreq2) <a href="#commentAA" class="border border-warning text-muted reference-link" id="commentAA-link" title="{{commentAA.headers.title}}">consisting of all of them</a>, not just the members of the `Perl` community.

What happened? [Philip Gollucci](https://projects.apache.org/committee.html?httpd#:~:text=Philip%20Gollucci), a Perl/FreeBSD colleague of mine at the time, started agitating that we promote the project to be released from inside the HTTPd server itself. What {# lede #}Philip didn't know very well back then was how utterly [peevish, vapid, and territorial](https://www.mail-archive.com/dev@httpd.apache.org/msg77781.html) that team had become{# lede #}, which would have meant having to collaborate with them directly on [user-facing decisions](https://www.mail-archive.com/dev@httpd.apache.org/msg77806.html) about the code base.

In 2012, Philip got what he wanted and I stopped resisting, so he forked the existing project and copied the `C` library components into HTTPd core.

In 2016 I resigned from the Foundation en masse. You can guess the reasons.

In 2020 or so, Google's Security Team took advantage of an alpha release of httpd 2.5 by fuzzing its 8 year old copy of `apreq2`. It found a few hotspots that needed repair.

Instead of having the courtesy of reaching out to  Philip, [Issac Goldstand](https://projects.apache.org/committee.html?httpd#:~:text=Issac%20Goldstand), Max Kellermann (@MaxKellermann), myself, or anyone else involved in the development of apreq2, a junior engineer on the HTTPd team went about the business of "bug fixing" the vulnerabilities Google found. You can see a record of his trial and error work in every release since then.

But the coup de grace was the 2022 release of 2.17, wherein the rookie developer [purposely introduced a fatal bug into the codebase](http://svn.apache.org/viewvc?view=revision&revision=1895107), breaking [a nineteen year old regression test](http://svn.apache.org/viewvc/httpd/apreq/trunk/library/t/parsers.c?r1=161816&r2=164254&pathrev=1895107).

If you are wondering how something with a broken regression test winds up on [CPAN](https://cpan-digger.perlmaven.com/dist/libapreq2), you'll have to look into how RELENG is done in the server project.

Long story short, [they commented out the test](http://svn.apache.org/viewvc?view=revision&revision=1903489) and shipped it anyway, and called it a Security Release that [fixed a vulnerability every prior release was susceptible to](https://bugs.debian.org/cgi-bin/bugreport.cgi?bug=1018191).

Why do I care now? Because I'm the sucker [users reach out to for answers](https://www.mail-archive.com/dev@httpd.apache.org/msg77426.html) as a known subject matter expert.

This sucks, but I'm sorry to tell you that my days wearing the Superman cape at Apache ended 8 years ago.
<!-- $Date$ $Author$ $Revision$ -->
