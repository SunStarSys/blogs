Title: CMS Security

## "Security through obscurity is not much security at all."

Popular paraphasing of American locksmith [Alfred Charles Hobbs](https://en.wikipedia.org/wiki/Alfred_Charles_Hobbs) in 1851, who easily picked the Crystal Palace locks during a London exhibition that year.  We fully agree, which is why our straightforward blueprints for our Oracle Cloud Infrastructure (OCI) automation engine are [available on github](https://github.com/joesuf4/home/blob/solaris/.zshrc).

## Passwordless RBAC model, peppered with [orthrus](https://github.com/joesuf4/orthrus/) OTP sudo challenges.

Limits headless automation of sudo usage, for good reason.  However, we have [tooling](https://github.com/joesuf4/pty) to eliminate the toil of  responding to prompts of various kinds.

## Sandboxed execution for builds and CGI scripts.

"Shared-nothing" zone builds, defaulting to zero network availability.

## Zero-Trust Aspects

Basic premise is to not design your network security around the physiology of clam - hard on the outside, but soft and loose once you are in.  So we don't do that- every meaningful priviledged network port inside the various OCI POP LANs is only exposed to the bare-metal machine's loopback interface `lo0`, and is only meaningful in the context of a forwarded SSH connection *to it* (and not the reverse.).  This infra is fully automated once a region is brought online, but that's all we can share publicly about the architecture, but beyond breaking the antispoofing `lo0` protection within Solaris 11's packet filter itself, there is no meaningful means of gaining access to these services, even for customer accounts.

